name: エッセィリストを更新

# このワークフローは、RSSフィードから最新のエッセイを取得し、
# 指定したMDXファイルにエッセイのタイトルとリンクを追記します。
# 定期実行はcronスケジュールと手動実行の両方が可能です。

on:
  schedule:
    - cron: '0 19 * * *'  # JSTの午前4時（UTCの19時）
  workflow_dispatch:  # 手動実行を可能にする

env:
  MDX_FILE: src/pages/essays.mdx   # 更新対象のMDXファイル
  RSS_URL: https://sizu.me/radish2951/rss   # RSSフィードのURL

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  # リポジトリのチェックアウト

      - name: RSSから最新エッセイを取得してMDX更新
        id: update_essay  # 後続ステップでアウトプットを参照するためのID
        run: |
          # RSSフィードの内容を取得
          rss=$(curl -s "$RSS_URL")
          # 最初の <item> ブロックを抽出
          item=$(echo "$rss" | awk '/<item>/{flag=1} flag; /<\/item>/{flag=0; exit}')
          # <title>タグ内のCDATAセクションからタイトルを抽出
          title=$(echo "$item" | grep -oP '(?<=<title>).*?(?=</title>)' | sed 's/<!\[CDATA\[//g; s/\]\]>//g')
          # <link>タグからリンクを抽出
          link=$(echo "$item" | grep -oP '(?<=<link>).*?(?=</link>)')
          
          # MDXファイルに同じリンクが存在しない場合、指定マーカーの直後に追記
          if ! grep -q "${link}" "$MDX_FILE"; then
            sed -i "/NEW_ESSAY_INSERTION_MARKER/ s|$|\n\n[${title}](${link})|" "$MDX_FILE"
          fi

          # 後続ステップでタイトルを利用できるようアウトプットに設定
          echo "essay_title=${title}" >> $GITHUB_OUTPUT

      - name: コミットとプッシュ
        run: |
          # GitHub Actions用のGitユーザー設定
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # 変更されたMDXファイルをステージング
          git add "$MDX_FILE"
          # アウトプットから取得したタイトルをコミットメッセージに利用
          git commit -m "エッセィ追加: ${{ steps.update_essay.outputs.essay_title }}" || true
          # 変更をリモートリポジトリにプッシュ
          git push

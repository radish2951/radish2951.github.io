name: エッセイリスト日付更新（コピー作成）

on:
  workflow_dispatch:  # 手動実行のみ

env:
  MDX_FILE: src/pages/essays.mdx
  UPDATED_MDX_FILE: src/pages/essays_updated.mdx

jobs:
  update_dates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: MDXファイルのコピー作成
        run: |
          cp "$MDX_FILE" "$UPDATED_MDX_FILE"
          echo "コピー元: $MDX_FILE → コピー先: $UPDATED_MDX_FILE"

      - name: 各記事の更新日を取得してコピーに反映
        run: |
          # 正規表現を変数に格納
          regex='^\[([^]]+)\]\(https://sizu\.me/radish2951/posts/[^)]+\).*'
          tmpfile=$(mktemp)
          while IFS= read -r line; do
            if [[ $line =~ $regex ]]; then
              title="${BASH_REMATCH[1]}"
              # URLは正規表現でマッチした部分を、grepで再抽出する方法もありますが、
              # ここではシンプルに、行から抽出します。
              url=$(echo "$line" | grep -o 'https://sizu\.me/radish2951/posts/[^)]\+')
              # 記事のHTMLを取得し、<time>タグのdateTime属性から更新日（YYYY-MM-DD形式）を抽出
              html=$(curl -s "$url")
              updated_date=$(echo "$html" | grep -oP '(?<=<time dateTime=")[0-9]{4}-[0-9]{2}-[0-9]{2}')
              if [ -n "$updated_date" ]; then
                # フォーマット変換：YYYY-MM-DD → YYYY/MM/DD
                formatted_date=$(echo "$updated_date" | sed 's/-/\//g')
                new_line="[$title]($url) $formatted_date"
                echo "$new_line" >> "$tmpfile"
              else
                echo "$line" >> "$tmpfile"
              fi
            else
              echo "$line" >> "$tmpfile"
            fi
          done < "$UPDATED_MDX_FILE"
          mv "$tmpfile" "$UPDATED_MDX_FILE"

      - name: コミットとプッシュ（コピー版）
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add "$UPDATED_MDX_FILE"
          git commit -m "エッセイ更新日付のコピー作成" || true
          git push
